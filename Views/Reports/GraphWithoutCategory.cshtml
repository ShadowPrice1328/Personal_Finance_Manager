@model ReportWithoutCategoryViewModel

@{
    ViewData["Title"] = "Day-by-Day Report";
}

<h2>
    Day-by-Day Report from @Model.FirstDate.ToString("yyyy-MM-dd") to @Model.LastDate.ToString("yyyy-MM-dd")
    <br />[@Model.Type]
</h2>
<hr />
<div>
    <canvas id="lineChart"></canvas>
</div>

@section scripts {
    <script>
        // Отримайте дані з моделі у змінні JavaScript
        var firstDate = new Date('@Model.FirstDate.ToString("yyyy-MM-dd")');
        var lastDate = new Date('@Model.LastDate.ToString("yyyy-MM-dd")');
        var categoryCosts = @Html.Raw(Json.Serialize(Model.CategoryCosts));
        console.log("categoryCosts: ", categoryCosts);

        // Створіть масив дат від firstDate до lastDate
        var dates = [];
        var currentDate = new Date(firstDate);
        while (currentDate <= lastDate) {
            dates.push(new Date(currentDate));
            currentDate.setDate(currentDate.getDate() + 1);
        }

        // Функція для форматування дати у відповідний формат
        function formatDate(date) {
            var year = date.getFullYear();
            var month = (date.getMonth() + 1).toString().padStart(2, '0');
            var day = date.getDate().toString().padStart(2, '0');
            return `${year}-${month}-${day}`;
        }

        // Створіть об'єкт для зберігання даних категорій
        var datasets = [];

        // Проходьте по кожній категорії
        Object.keys(categoryCosts).forEach(function (category) {
            // Створіть масив витрат для поточної категорії
            var categoryData = dates.map(function (date) {
                var dateString = formatDate(date);
                console.log(dateString);

                var cost = categoryCosts[category];
                console.log(cost);
                return cost;
            });
            console.log("categoryData: ", categoryData);

            // Додайте дані для поточної категорії у масив даних категорій
            datasets.push({
                label: category,
                data: categoryData,
                borderColor: 'rgba(75, 192, 192, 1)',
                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                fill: true
            });
        });

        // Створіть контекст для малювання діаграми
        var ctx = document.getElementById('lineChart').getContext('2d');

        // Створіть лінійну діаграму з витратами
        new Chart(ctx, {
            type: 'line',
            data: {
                labels: dates.map(function (date) {
                    return formatDate(date);
                }),
                datasets: datasets
            },
            options: {
                responsive: true,
                scales: {
                    x: {
                        display: true,
                        title: {
                            display: true,
                            text: 'Date'
                        }
                    },
                    y: {
                        display: true,
                        title: {
                            display: true,
                            text: 'Costs'
                        }
                    }
                }
            }
        });
    </script>

}